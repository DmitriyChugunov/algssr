########### задание 1 ###########

# nums = str(input("Введите числа через пробел: "))                   # запрашиваем числа у пользователя через пробел
#
# def max_num(nums):                                                  # содаем функцию
#     nums_list = nums.split()                                        # преобразует в список который показывался в примере
#     if len(nums_list) == 1:                                         # если пользователь ввел числа в 1 строку мы выводим 0
#         return 0
#     n = len(nums_list)                                              # находим длину списка
#     m = {}                                                          # содаем словарик для того чтобы потом записывать туда
#     for num in nums_list:                                           # перебираем список
#         if num in m:                                                # если элемент есть в словаре присваеваем +1
#             m[num] += 1
#         else:                                                       # если его нету мы его присваем 1
#             m[num] = 1
#     for num, freq in m.items():                                     # проверяем, есть ли элемент, встречающийся более чем в половине массива
#         if freq > n / 2:                                            # freq = частота и если частота больше половины длины списка выводим num - число которое наиболее встречающиеся
#             return num
#     return 0                                                        # если длина половины списка больше частоты то выводим 0
# res = max_num(nums)                                                 # присваиваем в res результат функции
# print(res)                                                          # выводим результат


#############задание 2############
# num = input("Введите число в двоичной системе: ")                       # запрашиваем значение у пользователя
# def tu_ten(num):
#     string = True                                                       # переменная для понятия, является ли входная строка двоичной
#     for j in num:                                                       # проверяем каждый символ строки
#         if j not in '01':                                               # если найден символ, не являющийся 0 или 1, устанавливаем переменную string в False
#             string = False
#             break                                                       # прервываем при нахождении
#
#     if string:                                                          # если входная строка является двоичной
#         dlina = 0
#         for j in num:                                                   # вычисляем длину строки
#             dlina += 1                                                  # присваиваем в переменную dlina длину строки
#
#         total = 0                                                       # переменная для результата
#         for i in range(dlina):                                          # Преобразуем двоичное число в десятичное
#             total += int(num[i]) * (2 ** (dlina - i - 1))               # формула вычесления
#         return total                                                    # возвращаем результат
#     else:
#         return "Неверное значение, введите число в двоичной системе"    # возвращаем неверное значение если число не является двоичным
# result = tu_ten(num)                                                    # присваиваем в result значение функции
# print(result)                                                           # выводим результат


####### задание 4 #########
# nums = input("Введите числа через пробел: ")                              # запрашиваем число у пользователя через пробел
# def unique_nums(nums):                                                    # создаем функцию
#     nums_list = nums.split()                                              # создаем список
#     nums_list = list(set(nums_list))                                      # удаляем дубликаты
#     nums_list = sorted(nums_list)                                         # сортируем список чтобы потом не было проблем
#     dlina = len(nums_list)                                                # вычисляем длину списка
#     result = []                                                           # переменная для записи результатов
#     if dlina % 2 == 0:                                                    # если список четный то:
#         for i in range(0, dlina, 2):                                      # перебираем список по 2 числа
#             result.append(int(nums_list[i + 1]))                          # ставим на первое место 2 индекс списка
#             result.append(int(nums_list[i]))
#     else:                                                                 # если список нечетный то:
#         for i in range(0, dlina - 1, 2):                                  # перебираем также как и в прошлый раз но без последнего значения(dlina -1)
#             result.append(int(nums_list[i + 1]))
#             result.append(int(nums_list[i]))
#         for i in range(dlina):                                            # перебираем каждый символ
#             if i == dlina - 1:                                            # находим последний
#                 result.append(int(nums_list[i]))                          # записываем его без изменений
#     return result                                                         # возвращаем результат
# result = unique_nums(nums)                                                # в переменную result присваеваем вывод функции
# print(result)                                                             # выводим ответ

############ задание 3 ############

# s1 = input("Введите число: ")                                               # запрашиваем данные у пользователя
# def str_to_int32(s):                                                        # создаем функцию
#     s = s.strip()                                                           # Убираем начальные и конечные пробелы
#     if not s:                                                               # выводим ошибку
#         raise "Строка не представляет 32-битное целое число"
#     is_negative = False                                                     # присваеваем False
#     if s[0] == '-':                                                         # если 0 индекс равен '-'
#         is_negative = True                                                  # присваеваем True
#         s = s[1:]                                                           # Убираем знак минуса
#     result = 0                                                              # создаем переменную с результатом 0 куда будем записывать ответ
#     for char in s:                                                          # перебираем каждый символ
#         if char.isdigit():                                                  # если char состоит только из цифр:
#             result = result * 10 + int(char)                                # в результат записываем ответ
#         else:                                                               # если строка состоит не только из цифр тозавершаем цикл
#             break
#     if is_negative:                                                         # если строка была с - и мы присвоили True то:
#         result = -result                                                    # добавляем "-"
#     return result                                                           # возвращаем ответ
# res = str_to_int32(s1)                                                      # в res записываем ответ нашей функции
# print(res)                                                                  # выводим ответ функции

########### задание 5 ##########
# try:                                                                                                # запрашиваем у пользователя количество сезонов и количество серий в каждом сезоне
#     n = int(input("Введите количество сезонов: "))                                                  # ввод количества сезонов
#     episodes_per_season = int(input("Введите количество серий в одном сезоне: "))                   # вввод количества серий в одном сезоне
#     available_episodes = int(input("Введите количество серий имеющихся на платформе: "))            # ввод количества доступных серий
# except ValueError:                                                                                  # если вводится некоректное значение:
#     print("Вы ввели некорректное значение. Пожалуйста, введите целое число.")                       # выводим ошибку
#     exit(1)                                                                                         # в случае ошибки ввода завершаем программу с кодом ошибки 1
# watched_ep = set()                                                                                  # cоздаем множество для хранения просмотренных серий
# if available_episodes > n * episodes_per_season:                                                    # если количество сезонов на платформе больше чем настоящее кол-во серий
#     print("Вы ввели некорректное значение.")                                                        # выводим ошибку если кол-во серий больше чем настоящее кол-во
#     exit(1)                                                                                         # если количество доступных серий больше, чем ожидалось, завершаем программу с кодом ошибки 1
# for _ in range(available_episodes):                                                                 # в цикле запрашиваем у пользователя информацию о просмотренных сериях
#     season = int(input("Введите номер сезона для следующей серии: "))                               # вводим номера сезона для следующей серии
#     episode = int(input("Введите номер серии: "))                                                   # ввод номера серии
#     watched_ep.add((season, episode))                                                               # добавляем просмотренную серию в множество
#     if season > n:                                                                                  # если номер сезона для следующей серии больше чем писал пользователя
#         print("Введите корректный номер сезона.")                                                   # выводим ошибку
#         exit(1)                                                                                     # проверяем корректность номера сезона и завершаем программу с кодом ошибки 1 при несоответствии
#     if episode > episodes_per_season:                                                               # если номер серии больше чем писал пользователь
#         print("Введите корректную серию.")                                                          # выводим ошибку
#         exit(1)                                                                                     # проверяем корректность номера серии и завершаем программу с кодом ошибки 1 при несоответствии
# missing_ep = []                                                                                     # cоздаем список непросмотренных серий
# for s in range(1, n + 1):                                                                           # цикл перебирает номера сезонов от 1 до n
#     for e in range(1, episodes_per_season + 1):                                                     # цикл перебирает номера серий в каждом сезоне от 1 до episodes_per_season
#         if (s, e) not in watched_ep:                                                                # проверяем, есть ли текущая серия (s, e) в множестве просмотренных серий
#             missing_ep.append((s, e))                                                               # если серия не найдена в просмотренных, добавляем ее в список непросмотренных серий
# k = len(missing_ep)                                                                                 # вычисляем количество непросмотренных серий
# print("Количество утерянных серий:", k)                                                             # выводим количество утерянных серий
# missing_ep.sort(key=lambda x: (x[0], x[1]))                                                         # сортируем список непросмотренных серий по номерам сезонов и серий
# cseason = None
# print(f"\nСписок сезонов и серий (Утерянные серии в скобках):")                                     # выводим список сезонов и серий с указанием непросмотренных серий в скобках
# for s in range(1, n + 1):                                                                           # итерируемся по номерам сезонов и формируем информацию о сериях в каждом сезоне
#     episodes_in_season = []                                                                         # создаем список для хранения информации о просмотренных сериях в текущем сезоне
#     for e in range(1, episodes_per_season + 1):                                                     # перебираем номера серий в текущем сезоне
#         if (s, e) not in watched_ep:                                                                # проверяем, просмотрена ли текущая серия (s, e)
#             episodes_in_season.append(e)                                                            # если серия не просмотрена, добавляем ее номер в список
#     episode_str = ""                                                                                # инициализируем строку для отображения информации о сериях
#     for e in range(1, episodes_per_season + 1):
#         if e in episodes_in_season:                                                                 # проверяем, просмотрена ли текущая серия (e)
#             episode_str += f"({e})"                                                                 # если серия просмотрена, добавляем номер в скобках
#         else:
#             episode_str += str(e)                                                                   # если серия не просмотрена, добавляем только номер
#         if e < episodes_per_season:
#             episode_str += " "                                                                      # добавляем пробел между номерами серий, кроме последней серии
#     print(f"Сезон {s}: {episode_str}")                                                              # выводим информацию о сериях в текущем сезоне с номером сезона